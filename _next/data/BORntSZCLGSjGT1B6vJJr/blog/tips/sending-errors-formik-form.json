{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var a=r=>s(r,\"__esModule\",{value:!0});var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{a(r);for(var t in e)s(r,t,{get:e[t],enumerable:!0})},k=(r,e,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of d(e))!p.call(r,o)&&o!==\"default\"&&s(r,o,{get:()=>e[o],enumerable:!(t=l(e,o))||t.enumerable});return r},v=r=>k(a(s(r!=null?m(u(r)):{},\"default\",r&&r.__esModule&&\"default\"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var c=f((y,i)=>{i.exports=_jsx_runtime});var j={};g(j,{default:()=>F,frontmatter:()=>w});var n=v(c()),w={title:\"Sending errors through a Formik form\",date:\"2022-07-22\",draft:!1,tags:[\"web development\",\"react\",\"formik\",\"tips\"],summary:\"Sending validation errors through Formik forms\"};function h(r){let e=Object.assign({p:\"p\",pre:\"pre\",code:\"code\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:`When we need to validate a Formik form (often with Yup) we can use the following method: validateForm.\nIt returns a promise so we have to check if it resolves or not.\nHowever, the validation errors are sent directly inside the promise as an argument and not caught. So the promise is always resolved in this case.`}),`\n`,(0,n.jsx)(e.p,{children:\"To pass the validation error, then, we have to pass the errors as an argument of the promise itself.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`  formik.validateForm({...})\n    .then((errors) => submit(formik, values, errors))\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Then the errors can be checked and the logic can be written in the submit method.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const submit = (formik, values, errors) => {...}\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Bonus: here are the types (for TS users) for the 3 arguments above:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`formik: FormikContextType<FormikValues>\nvalues: FormikValues\nerrors: FormikErrors<FormikValues>\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Thank you for reading and let's connect on \",(0,n.jsx)(e.a,{href:\"https://twitter.com/AlexBuaiscia\",children:\"Twitter\"}),\"!\"]})]})}function x(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var F=x;return j;})();\n;return Component;","toc":[],"frontMatter":{"readingTime":{"text":"1 min read","minutes":0.89,"time":53400,"words":178},"slug":"tips/sending-errors-formik-form","fileName":"tips/sending-errors-formik-form.md","title":"Sending errors through a Formik form","date":"2022-07-22T00:00:00.000Z","draft":false,"tags":["web development","react","formik","tips"],"summary":"Sending validation errors through Formik forms"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.84,"time":50400,"words":168},"slug":["default"],"fileName":"default.md","name":"Alex Buaiscia","avatar":"/static/images/avatar.png","occupation":"Full-stack Software Developer","company":"Moravio","twitter":"https://twitter.com/AlexBuaiscia","linkedin":"https://www.linkedin.com/in/alex-buaiscia/","github":"https://github.com/buaiscia","date":null}],"prev":{"title":"How I passed from Junior to Intermediate developer in one year","date":"2021-12-15T00:00:00.000Z","draft":false,"tags":["insights","career"],"summary":"Learning from going above junior is not easy. This is why I think I did it and what I could learn in this passage","slug":"career/how-passed-from-junior-to-intermediate-dev-one-year"},"next":{"title":"Memoize a React component","date":"2022-07-27T00:00:00.000Z","draft":false,"tags":["web development","react","tips"],"summary":"Using React.memo to memoize a React component","slug":"tips/memoize-react-component"}},"__N_SSG":true}