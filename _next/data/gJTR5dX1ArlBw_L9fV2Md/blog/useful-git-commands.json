{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var l=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var o=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var t=c=>l(c,\"__esModule\",{value:!0});var p=(c,i)=>()=>(i||c((i={exports:{}}).exports,i),i.exports),u=(c,i)=>{t(c);for(var r in i)l(c,r,{get:i[r],enumerable:!0})},b=(c,i,r)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let n of o(i))!g.call(c,n)&&n!==\"default\"&&l(c,n,{get:()=>i[n],enumerable:!(r=s(i,n))||r.enumerable});return c},f=c=>b(t(l(c!=null?d(m(c)):{},\"default\",c&&c.__esModule&&\"default\"in c?{get:()=>c.default,enumerable:!0}:{value:c,enumerable:!0})),c);var h=p((x,a)=>{a.exports=_jsx_runtime});var k={};u(k,{default:()=>N,frontmatter:()=>w});var e=f(h()),w={title:\"Useful GIT commands\",date:\"2021-01-26\",tags:[\"git\",\"web development\"],draft:!1,summary:\"Useful commands to use in git in everyday working life\"};function y(c={}){let{wrapper:i}=c.components||{};return i?(0,e.jsx)(i,Object.assign({},c,{children:(0,e.jsx)(r,{})})):r();function r(){let n=Object.assign({p:\"p\",img:\"img\",em:\"em\",code:\"code\",pre:\"pre\",span:\"span\",ul:\"ul\",li:\"li\"},c.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{alt:\"Git\",src:\"https://res.cloudinary.com/buaiscia/image/upload/v1614200427/techblog/git_ayzsas.jpg\"})}),(0,e.jsx)(n.p,{children:\"I'm creating this post for reminding myself about some useful git features... and updating it along the way.\"}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Create new git local repository\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git init\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Normal way for committing and pushing\"})]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`git add .\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`git commit -m \"message\"\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`git push origin master\n`})]})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Check status\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git status\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Create new branch\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git checkout -b branchname\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Switch between branches\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git checkout branchname\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Push branch to remote\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git push origin branchname\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Push local working branch to its correspondent on Github\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git push origin HEAD\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Merge branch into master\"})]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`git checkout master\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`git merge branchname\n`})]})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"How to remove file/dir from git after adding it to .gitignore\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git rm --cached (file)\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Command to check which files are ignored\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git status --ignored\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"How to force revert to last status of master if pulled by mistake from remote depository\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git reset --hard master@{time to revert back in minutes}\"}),\" \",(0,e.jsx)(n.em,{children:\"possibly losing last commit\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git reset --hard a0d3fe6\"}),\" \",(0,e.jsx)(n.em,{children:\"reverting to last commit\"})]}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"How to force revert after a rebase\"})]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-javacript\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:\"  git reflog` ## check the HEAD{number} before the rebase starts\\n\"}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  git reset --hard HEAD{number}\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`})]})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Wrong name branch? No problem: delete the one in GH, rename the local one and repush it\"})]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`git push origin :old-name-of-branch-on-github\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`git branch -m old-name-of-branch-on-github new-name-for-branch-you-want\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`git push origin new-name-for-branch-you-want\n`})]})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Need to change the branch but have uncommitted, unstaged changes that can conflict with the other branch? Stash comes to help\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git stash list\"}),\" \",(0,e.jsx)(n.em,{children:\"-- list all stashes\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git stash\"}),\" \",(0,e.jsx)(n.em,{children:\"-- stash (saves all unstaged changes in a temporary state under the current commit name)\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git stash apply\"}),\" \",(0,e.jsx)(n.em,{children:\"-- place back all the last stashed changes\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git stash apply stash@{3}\"}),\" \",(0,e.jsx)(n.em,{children:\"-- place back all the changes stashed at the stash n.4 (counting from 0)\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git stash drop stash@{3}\"}),\" \",(0,e.jsx)(n.em,{children:\"-- delete a particular stash\"})]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"git stash clear\"}),\" \",(0,e.jsx)(n.em,{children:\"-- delete all stashes\"})]}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Make a diff between two branches. In a situation, for example, in which I need to rebase, or check the changes between the two branches\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git diff branch1..branch2\"})}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Rebase. You have new merged changes on the master branch and need to merge in a clean way those changes in your local branch. It will place in the local log all master commit logs as well. After rebase, push -f origin HEAD\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.em,{children:\"Flow:\"})}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"git checkout master\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"git pull origin master\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"git checkout localbranch\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"git rebase master\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"git push -f origin localbranch\"})})]}),(0,e.jsxs)(n.p,{children:[\"-- \",(0,e.jsx)(n.em,{children:\"Get remote branch locally\"})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git fetch\"})}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git checkout remote-branch\"})}),(0,e.jsx)(n.p,{children:\"-- _...Or the alternative way\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git checkout -b remote-branch\"})}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"git pull origin remote-branch\"})}),(0,e.jsx)(n.p,{children:\"-- _Delete multiple branches in git\"}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:'git branch | grep \"<pattern>\"'}),\" to preview the branches\"]}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:'git branch | grep \"<pattern>\" | xargs git branch -D'}),\" to actually delete them\"]})]})}}var N=y;return k;})();\n;return Component;","toc":[],"frontMatter":{"readingTime":{"text":"3 min read","minutes":2.25,"time":135000,"words":450},"slug":"useful-git-commands","fileName":"useful-git-commands.md","title":"Useful GIT commands","date":"2021-01-26T00:00:00.000Z","tags":["git","web development"],"draft":false,"summary":"Useful commands to use in git in everyday working life"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.94,"time":56400,"words":188},"slug":["default"],"fileName":"default.md","name":"Alex Buaiscia","avatar":"/static/images/avatar.png","occupation":"Full-stack Software Developer","company":"Moravio","twitter":"https://twitter.com/AlexBuaiscia","linkedin":"https://www.linkedin.com/in/alex-buaiscia/","github":"https://github.com/buaiscia","date":null}],"prev":{"title":"How I transitioned from humanistic jobs to tech and development and why it is possible to start from the basics.","date":"2020-12-02T00:00:00.000Z","draft":false,"tags":["insights"],"summary":"Transitioning from literature and languages to tech was not easy. Making a career from basic roles to developer is possible, and even better sometimes.","slug":"how-transitioned-from-humanistic-to-tech-and-helped"},"next":{"title":"What I learnt in my first six months as a working (self-taught) developer","date":"2021-07-06T00:00:00.000Z","template":"post","draft":false,"tags":["insights"],"summary":"The first six months of a developer are maybe the most challenging. This is what I learnt. My mistakes and accomplishments, to become a better dev","slug":"what-learnt-in-first-six-months-self-taught-developer"}},"__N_SSG":true}